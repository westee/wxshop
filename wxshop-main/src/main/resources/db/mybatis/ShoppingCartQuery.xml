<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.westee.wxshop.dao.ShoppingCartQueryMapper">
    <select id="countHowManyShopsInUserShoppingCart" resultType="int" parameterType="long">
        select count(distinct SHOPPING_CART.SHOP_ID)  from SHOPPING_CART where USER_ID = #{userId} AND STATUS = 'ok'
    </select>
    <select id="selectShoppingCartDataByUserId" resultMap="getShoppingCartResultMap" parameterType="Map">
        select
          SHOP.ID as SHOP_ID,
          SHOP.NAME as SHOP_NAME,
          SHOP.DESCRIPTION as SHOP_DESCRIPTION,
          SHOP.IMG_URL as SHOP_IMG_URL,
          SHOP.OWNER_USER_ID as SHOP_OWNER_ID,
          SHOP.CREATED_AT as SHOP_CREATED_AT,
          SHOP.UPDATED_AT as SHOP_UPDATED_AT,

          GOODS.ID as GOODS_ID,
          GOODS.NAME as GOODS_NAME,
          GOODS.DESCRIPTION as GOODS_DESCRIPTION,
          GOODS.DETAILS as GOODS_DETAILS,
          GOODS.IMG_URL as GOODS_IMG_URL,
          GOODS.PRICE as GOODS_PRICE,
          GOODS.CREATED_AT as GOODS_CREATED_AT,
          GOODS.UPDATED_AT as GOODS_UPDATED_AT,
          SHOPPING_CART.NUMBER as GOODS_NUMBER
        from (
             select distinct SHOP_ID
             from SHOPPING_CART
             where USER_ID = #{userId}
             and STATUS = 'ok'
             limit #{offset},#{limit}
             ) t1
        join SHOPPING_CART on t1.SHOP_ID = SHOPPING_CART.SHOP_ID
        join GOODS on SHOPPING_CART.GOODS_ID = GOODS.ID
        join SHOP on t1.SHOP_ID =SHOP.ID

    </select>
    <resultMap id="getShoppingCartResultMap" type="ShoppingCartData">
        <association property="shop" javaType="Shop">
            <id property="id" column="SHOP_ID"/>
            <result property="name" column="SHOP_NAME"></result>
            <result property="description" column="SHOP_DESCRIPTION"></result>
            <result property="imgUrl" column="SHOP_IMG_URL"></result>
            <result property="ownerUserId" column="SHOP_OWNER_ID"></result>
            <result property="createdAt" column="SHOP_CREATED_AT"></result>
            <result property="updatedAt" column="SHOP_UPDATED_AT"></result>
        </association>
        <collection property="goods" ofType="ShoppingCartGoods">
            <id property="id" column="GOODS_ID"/>
            <result property="name" column="GOODS_NAME"></result>
            <result property="description" column="GOODS_DESCRIPTION"></result>
            <result property="details" column="GOODS_DETAILS"></result>
            <result property="imgUrl" column="GOODS_IMG_URL"></result>
            <result property="price" column="GOODS_PRICE"></result>
            <result property="number" column="GOODS_NUMBER"></result>
            <result property="shopId" column="SHOP_ID"></result>
            <result property="createdAt" column="GOODS_CREATED_AT"></result>
            <result property="updatedAt" column="GOODS_UPDATED_AT"></result>
            <result property="status" column="GOODS_STATUS"/>
        </collection>
    </resultMap>

    <delete id="deleteShoppingCart" parameterType="Map">
        update SHOPPING_CART
        set SHOPPING_CART.STATUS = 'deleted', UPDATED_AT = now()
        where SHOPPING_CART.USER_ID = #{userId}
        and SHOPPING_CART.GOODS_ID = #{goodsId}
    </delete>
</mapper>